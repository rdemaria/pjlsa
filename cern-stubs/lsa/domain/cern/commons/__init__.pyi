import cern.accsoft.commons.domain
import java.util.function
import typing


class CernAccelerators:
    class AD(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class AWAKE(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class CTF(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class ELENA(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class ISOLDE(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class LEIR(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class LHC(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class LINAC4(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class NORTH(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class PS(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class PSB(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...
    class SPS(java.util.function.Supplier[cern.accsoft.commons.domain.Accelerator]):
        def __init__(self): ...
        def get(self) -> cern.accsoft.commons.domain.Accelerator: ...

class LsaCernConstants:
    class DriveConstants:
        ATTR_FUNCTIONS_TO_REACH_NEW_VALUES: typing.ClassVar[str] = ...
        ATTR_TIME_TO_REACH_NEW_VALUES: typing.ClassVar[str] = ...
        ATTR_TRANSACTION_ID: typing.ClassVar[str] = ...
