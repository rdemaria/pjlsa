import cern.accsoft.commons.util
import cern.accsoft.commons.value
import cern.lsa.domain.cern.optics
import cern.lsa.domain.commons.spi
import java.io
import java.util
import typing


class FidelModelImpl(cern.lsa.domain.commons.spi.AbstractIdentifiedNamedEntity[cern.lsa.domain.cern.optics.FidelModel], cern.lsa.domain.cern.optics.FidelModel, java.io.Serializable):
    def __init__(self, long: int, string: str, string2: str): ...
    def addComponent(self, string: str) -> None: ...
    def findModelCoefficients(self, string: str) -> java.util.Map[str, float]: ...
    def getCoeffMap(self) -> java.util.Map[str, java.util.Map[str, float]]: ...
    def getComponentsNames(self) -> java.util.Set[str]: ...
    def getModelId(self) -> int: ...
    def getModelName(self) -> str: ...
    def setCoeffMap(self, map: typing.Union[java.util.Map[str, typing.Union[java.util.Map[str, float], typing.Mapping[str, float]]], typing.Mapping[str, typing.Union[java.util.Map[str, float], typing.Mapping[str, float]]]]) -> None: ...

class FieldHarmonicImpl(cern.accsoft.commons.util.AbstractNamedSerializable, cern.lsa.domain.cern.optics.FieldHarmonic):
    def __init__(self, string: str, date: java.util.Date, immutableDiscreteFunction: cern.accsoft.commons.value.ImmutableDiscreteFunction): ...
    def getComponentName(self) -> str: ...
    def getCreationDate(self) -> java.util.Date: ...
    def getCurrent2CnFunction(self) -> cern.accsoft.commons.value.ImmutableDiscreteFunction: ...
    def getModelName(self) -> str: ...
    def setComponentName(self, string: str) -> None: ...
    def setModelName(self, string: str) -> None: ...
