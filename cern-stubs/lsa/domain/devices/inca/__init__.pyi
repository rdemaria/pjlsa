import cern.lsa.domain.devices.type
import java.io
import java.lang
import java.util
import typing


class IncaPropertyFieldInfo:
    @staticmethod
    def builder() -> 'DefaultIncaPropertyFieldInfo.Builder': ...
    def getAssociatedPropertyField(self) -> cern.lsa.domain.devices.type.PropertyField: ...
    def getControlWarningMessage(self) -> str: ...
    def getDisplayFormat(self) -> str: ...
    def getDisplayName(self) -> str: ...
    def getParameterValueCompareType(self) -> 'IncaPropertyFieldInfo.ValueCompareType': ...
    def getPropertyField(self) -> cern.lsa.domain.devices.type.PropertyField: ...
    def isMainStatus(self) -> bool: ...
    class ValueCompareType(java.lang.Enum['IncaPropertyFieldInfo.ValueCompareType']):
        EXACT_MEANING: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        TOL_REL: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        TOL_ABS: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        EXACT: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        TOL_ABS_REL: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        TOL_ABS_MOD360: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        NONE: typing.ClassVar['IncaPropertyFieldInfo.ValueCompareType'] = ...
        _valueOf_1__T = typing.TypeVar('_valueOf_1__T', bound=java.lang.Enum)  # <T>
        @typing.overload
        @staticmethod
        def valueOf(string: str) -> 'IncaPropertyFieldInfo.ValueCompareType': ...
        @typing.overload
        @staticmethod
        def valueOf(class_: typing.Type[_valueOf_1__T], string: str) -> _valueOf_1__T: ...
        @staticmethod
        def values() -> typing.List['IncaPropertyFieldInfo.ValueCompareType']: ...

class IncaPropertyFieldInfosRequest:
    @staticmethod
    def builder() -> 'DefaultIncaPropertyFieldInfosRequest.Builder': ...
    @staticmethod
    def byPropertyField(propertyField: cern.lsa.domain.devices.type.PropertyField) -> 'IncaPropertyFieldInfosRequest': ...
    @staticmethod
    def byPropertyFields(set: java.util.Set[cern.lsa.domain.devices.type.PropertyField]) -> 'IncaPropertyFieldInfosRequest': ...
    def getPropertyFields(self) -> java.util.Set[cern.lsa.domain.devices.type.PropertyField]: ...

class DefaultIncaPropertyFieldInfo(IncaPropertyFieldInfo, java.io.Serializable):
    @staticmethod
    def builder() -> 'DefaultIncaPropertyFieldInfo.Builder': ...
    @staticmethod
    def copyOf(incaPropertyFieldInfo: IncaPropertyFieldInfo) -> 'DefaultIncaPropertyFieldInfo': ...
    def equals(self, object: typing.Any) -> bool: ...
    def getAssociatedPropertyField(self) -> cern.lsa.domain.devices.type.PropertyField: ...
    def getControlWarningMessage(self) -> str: ...
    def getDisplayFormat(self) -> str: ...
    def getDisplayName(self) -> str: ...
    def getParameterValueCompareType(self) -> IncaPropertyFieldInfo.ValueCompareType: ...
    def getPropertyField(self) -> cern.lsa.domain.devices.type.PropertyField: ...
    def hashCode(self) -> int: ...
    def isMainStatus(self) -> bool: ...
    def toString(self) -> str: ...
    def withAssociatedPropertyField(self, propertyField: cern.lsa.domain.devices.type.PropertyField) -> 'DefaultIncaPropertyFieldInfo': ...
    def withControlWarningMessage(self, string: str) -> 'DefaultIncaPropertyFieldInfo': ...
    def withDisplayFormat(self, string: str) -> 'DefaultIncaPropertyFieldInfo': ...
    def withDisplayName(self, string: str) -> 'DefaultIncaPropertyFieldInfo': ...
    def withMainStatus(self, boolean: bool) -> 'DefaultIncaPropertyFieldInfo': ...
    def withParameterValueCompareType(self, valueCompareType: IncaPropertyFieldInfo.ValueCompareType) -> 'DefaultIncaPropertyFieldInfo': ...
    def withPropertyField(self, propertyField: cern.lsa.domain.devices.type.PropertyField) -> 'DefaultIncaPropertyFieldInfo': ...
    class Builder:
        def associatedPropertyField(self, propertyField: cern.lsa.domain.devices.type.PropertyField) -> 'DefaultIncaPropertyFieldInfo.Builder': ...
        def build(self) -> 'DefaultIncaPropertyFieldInfo': ...
        def controlWarningMessage(self, string: str) -> 'DefaultIncaPropertyFieldInfo.Builder': ...
        def displayFormat(self, string: str) -> 'DefaultIncaPropertyFieldInfo.Builder': ...
        def displayName(self, string: str) -> 'DefaultIncaPropertyFieldInfo.Builder': ...
        def mainStatus(self, boolean: bool) -> 'DefaultIncaPropertyFieldInfo.Builder': ...
        def parameterValueCompareType(self, valueCompareType: IncaPropertyFieldInfo.ValueCompareType) -> 'DefaultIncaPropertyFieldInfo.Builder': ...
        def propertyField(self, propertyField: cern.lsa.domain.devices.type.PropertyField) -> 'DefaultIncaPropertyFieldInfo.Builder': ...

class DefaultIncaPropertyFieldInfosRequest(IncaPropertyFieldInfosRequest, java.io.Serializable):
    @staticmethod
    def builder() -> 'DefaultIncaPropertyFieldInfosRequest.Builder': ...
    @staticmethod
    def copyOf(incaPropertyFieldInfosRequest: IncaPropertyFieldInfosRequest) -> 'DefaultIncaPropertyFieldInfosRequest': ...
    def equals(self, object: typing.Any) -> bool: ...
    def getPropertyFields(self) -> java.util.Set[cern.lsa.domain.devices.type.PropertyField]: ...
    def hashCode(self) -> int: ...
    def toString(self) -> str: ...
    @typing.overload
    def withPropertyFields(self, propertyFieldArray: typing.List[cern.lsa.domain.devices.type.PropertyField]) -> 'DefaultIncaPropertyFieldInfosRequest': ...
    @typing.overload
    def withPropertyFields(self, iterable: java.lang.Iterable[cern.lsa.domain.devices.type.PropertyField]) -> 'DefaultIncaPropertyFieldInfosRequest': ...
    class Builder:
        def addAllPropertyFields(self, iterable: java.lang.Iterable[cern.lsa.domain.devices.type.PropertyField]) -> 'DefaultIncaPropertyFieldInfosRequest.Builder': ...
        def addPropertyField(self, propertyField: cern.lsa.domain.devices.type.PropertyField) -> 'DefaultIncaPropertyFieldInfosRequest.Builder': ...
        def addPropertyFields(self, propertyFieldArray: typing.List[cern.lsa.domain.devices.type.PropertyField]) -> 'DefaultIncaPropertyFieldInfosRequest.Builder': ...
        def build(self) -> 'DefaultIncaPropertyFieldInfosRequest': ...
        def propertyFields(self, iterable: java.lang.Iterable[cern.lsa.domain.devices.type.PropertyField]) -> 'DefaultIncaPropertyFieldInfosRequest.Builder': ...
