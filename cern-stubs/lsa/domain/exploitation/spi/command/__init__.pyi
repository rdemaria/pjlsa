import cern.accsoft.commons.value
import cern.japc.core
import cern.lsa.domain.exploitation.command
import cern.lsa.domain.settings
import java.io
import java.util
import typing



class HwCommandExecutionRequestImpl(cern.lsa.domain.exploitation.command.HwCommandExecutionRequest, java.io.Serializable):
    """
    public class HwCommandExecutionRequestImpl extends `Object <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/lang/Object.html?is-external=true>` implements :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest`, `Serializable <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/io/Serializable.html?is-external=true>`
    
    
        Also see:
            :meth:`~serialized`
    """
    def __init__(self, hwCommand: cern.lsa.domain.exploitation.command.HwCommand): ...
    def areNonResidentContextsEnabled(self) -> bool:
        """
        
            Specified by:
                :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.areNonResidentContextsEnabled`Â in
                interfaceÂ :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest`
        
            Returns:
                true if the hw command should be executed even if the given contexts are not resident
        
        
        """
        ...
    def getCommand(self) -> cern.lsa.domain.exploitation.command.HwCommand:
        """
            Description copied from interface: :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.getCommand`
            The name of the command to execute
        
            Specified by:
                :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.getCommand`Â in
                interfaceÂ :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest`
        
            Returns:
                the name of the command to execute
        
        
        """
        ...
    def getContexts(self) -> java.util.Set[cern.lsa.domain.settings.DrivableContext]: ...
    def getDeviceNames(self) -> java.util.List[str]: ...
    def getHardwareGroups(self) -> java.util.List[str]: ...
    def getParameters(self) -> java.util.Map[str, cern.accsoft.commons.value.ImmutableScalar]: ...
    def setContexts(self, collection: typing.Union[java.util.Collection[cern.lsa.domain.settings.DrivableContext], typing.Sequence[cern.lsa.domain.settings.DrivableContext]]) -> None: ...
    def setDeviceNames(self, collection: typing.Union[java.util.Collection[str], typing.Sequence[str]]) -> None: ...
    def setHardwareGroups(self, collection: typing.Union[java.util.Collection[str], typing.Sequence[str]]) -> None: ...
    def setNonResidentContextsEnabled(self, boolean: bool) -> None:
        """
        
            Specified by:
                :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.setNonResidentContextsEnabled`Â in
                interfaceÂ :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest`
        
        
        """
        ...
    @typing.overload
    def setParameter(self, string: str, immutableScalar: cern.accsoft.commons.value.ImmutableScalar) -> None:
        """
            Description copied from interface: :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.setParameter`
            Sets a specific parameter value to the request. Note that constant (fixed) parameters can not be modified.
        
            Specified by:
                :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.setParameter`Â in
                interfaceÂ :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest`
        
            Parameters:
                parameterName (`String <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/lang/String.html?is-external=true>`): parameter to set
                value (cern.accsoft.commons.value.ImmutableScalar): value
        
            Description copied from interface: :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.setParameter`
            Sets a specific parameter value as String, internally the value is converted into the correct data type before setting
            it
        
            Specified by:
                :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest.setParameter`Â in
                interfaceÂ :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionRequest`
        
            Parameters:
                parameterName (`String <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/lang/String.html?is-external=true>`): parameter to set
                value (`String <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/lang/String.html?is-external=true>`): value as String
        
        
        """
        ...
    @typing.overload
    def setParameter(self, string: str, string2: str) -> None: ...
    def setParameters(self, map: typing.Union[java.util.Map[str, cern.accsoft.commons.value.ImmutableScalar], typing.Mapping[str, cern.accsoft.commons.value.ImmutableScalar]]) -> None: ...
    def toString(self) -> str:
        """
        
            Overrides:
                 in class 
        
        
        """
        ...

class HwCommandExecutionResponseImpl(java.io.Serializable, cern.lsa.domain.exploitation.command.HwCommandExecutionResponse):
    """
    public class HwCommandExecutionResponseImpl extends `Object <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/lang/Object.html?is-external=true>` implements `Serializable <http://bewww.cern.ch/ap/dist/java/jdk/1.8/docs/api/java/io/Serializable.html?is-external=true>`, :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionResponse`
    
    
        Also see:
            :meth:`~serialized`
    """
    def __init__(self, hwCommandExecutionRequest: cern.lsa.domain.exploitation.command.HwCommandExecutionRequest): ...
    def getCommand(self) -> cern.lsa.domain.exploitation.command.HwCommand:
        """
            Description copied from interface: :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionResponse.getCommand`
            Returns the hardware command this response belongs to
        
            Specified by:
                :meth:`~cern.lsa.domain.exploitation.command.HwCommandExecutionResponse.getCommand`Â in
                interfaceÂ :class:`~cern.lsa.domain.exploitation.command.HwCommandExecutionResponse`
        
            Returns:
                hw command
        
        
        """
        ...
    def getContexts(self) -> java.util.Set[cern.lsa.domain.settings.DrivableContext]: ...
    def getDeviceNames(self) -> java.util.List[str]: ...
    def getDeviceResponses(self) -> java.util.List[cern.japc.core.FailSafeParameterValue]: ...
    def setDeviceResponses(self, collection: typing.Union[java.util.Collection[str], typing.Sequence[str]], collection2: typing.Union[java.util.Collection[cern.japc.core.FailSafeParameterValue], typing.Sequence[cern.japc.core.FailSafeParameterValue]]) -> None: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("cern.lsa.domain.exploitation.spi.command")``.

    HwCommandExecutionRequestImpl: typing.Type[HwCommandExecutionRequestImpl]
    HwCommandExecutionResponseImpl: typing.Type[HwCommandExecutionResponseImpl]
