from typing import Any as _py_Any
import cern.accsoft.commons.value
import cern.lsa.domain.exploitation
import cern.lsa.domain.settings
import java.util


class DriveRequestBuilder:
    def __init__(self): ...
    def addValue(self, parameter: cern.lsa.domain.settings.Parameter, drivableContext: cern.lsa.domain.settings.DrivableContext, immutableValue: cern.accsoft.commons.value.ImmutableValue) -> 'DriveRequestBuilder': ...
    def build(self) -> cern.lsa.domain.exploitation.DriveRequest: ...
    def setAttribute(self, string: str, object: _py_Any) -> 'DriveRequestBuilder': ...
    def setCommit(self, boolean: bool) -> 'DriveRequestBuilder': ...
    def setContextSettings(self, contextSettings: cern.lsa.domain.settings.ContextSettings) -> 'DriveRequestBuilder': ...
    def setDrivableContexts(self, collection: java.util.Collection[cern.lsa.domain.settings.DrivableContext]) -> 'DriveRequestBuilder': ...
    def setDriveForNonResidentContextsEnabled(self, boolean: bool) -> 'DriveRequestBuilder': ...
    def setLenientDrive(self, boolean: bool) -> 'DriveRequestBuilder': ...
    def setParameters(self, collection: java.util.Collection[cern.lsa.domain.settings.Parameter]) -> 'DriveRequestBuilder': ...
    def setStandAloneContext(self, standAloneContext: cern.lsa.domain.settings.StandAloneContext) -> 'DriveRequestBuilder': ...
    def setTransactionId(self, int: int) -> 'DriveRequestBuilder': ...

class ReadHardwareRequestBuilder:
    def __init__(self): ...
    def build(self) -> cern.lsa.domain.exploitation.ReadHardwareRequest: ...
    def setDrivableContext(self, drivableContext: cern.lsa.domain.settings.DrivableContext) -> 'ReadHardwareRequestBuilder': ...
    def setNonResidentContextsEnabled(self, boolean: bool) -> 'ReadHardwareRequestBuilder': ...
    def setParameters(self, collection: java.util.Collection[cern.lsa.domain.settings.Parameter]) -> 'ReadHardwareRequestBuilder': ...

class SettingsOnlineCheckRequestBuilder:
    def __init__(self): ...
    def build(self) -> cern.lsa.domain.exploitation.SettingsOnlineCheckRequest: ...
    @classmethod
    def newInstance(cls) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setCheckType(self, settingsCheckType: cern.lsa.domain.exploitation.SettingsOnlineCheckRequest.SettingsCheckType) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setDeviceGroupName(self, string: str) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setDeviceNames(self, collection: java.util.Collection[str]) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setNonResidentContextsEnabled(self, boolean: bool) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setParameterNames(self, collection: java.util.Collection[str]) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setPropertyNames(self, collection: java.util.Collection[str]) -> 'SettingsOnlineCheckRequestBuilder': ...
    def setUser(self, string: str) -> 'SettingsOnlineCheckRequestBuilder': ...
