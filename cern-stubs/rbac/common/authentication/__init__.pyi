from typing import List as _py_List
from typing import TypeVar as _py_TypeVar
from typing import Type as _py_Type
from typing import ClassVar as _py_ClassVar
from typing import overload
import java.lang


class LoginPolicy(java.lang.Enum['LoginPolicy']):
    DEFAULT: _py_ClassVar['LoginPolicy'] = ...
    LOCATION: _py_ClassVar['LoginPolicy'] = ...
    EXPLICIT: _py_ClassVar['LoginPolicy'] = ...
    SSO: _py_ClassVar['LoginPolicy'] = ...
    KERBEROS: _py_ClassVar['LoginPolicy'] = ...
    @classmethod
    @overload
    def valueOf(cls, string: str) -> 'LoginPolicy': ...
    _valueOf_1__T = _py_TypeVar('_valueOf_1__T', bound=java.lang.Enum)  # <T>
    @classmethod
    @overload
    def valueOf(cls, class_: _py_Type[_valueOf_1__T], string: str) -> _valueOf_1__T: ...
    @classmethod
    def values(cls) -> _py_List['LoginPolicy']: ...
