import cern.rbac.common
import typing


class TestTokenBuilder:
    DEFAULT_USER_ACCOUNT_TYPE: typing.ClassVar[cern.rbac.common.UserPrincipal.AccountType] = ...
    def application(self, string: str) -> 'TestTokenBuilder': ...
    def authenticationTime(self, int: int) -> 'TestTokenBuilder': ...
    def build(self) -> cern.rbac.common.RbaToken: ...
    def lifeTime(self, int: int) -> 'TestTokenBuilder': ...
    def location(self, string: str) -> 'TestTokenBuilder': ...
    @staticmethod
    def newInstance() -> 'TestTokenBuilder': ...
    def reset(self) -> 'TestTokenBuilder': ...
    def roles(self, stringArray: typing.List[str]) -> 'TestTokenBuilder': ...
    def rolesExpirations(self, intArray: typing.List[int]) -> 'TestTokenBuilder': ...
    def rolesHints(self, stringArray: typing.List[str]) -> 'TestTokenBuilder': ...
    def tokenType(self, tokenType: cern.rbac.common.TokenType) -> 'TestTokenBuilder': ...
    def userAccountType(self, accountType: cern.rbac.common.UserPrincipal.AccountType) -> 'TestTokenBuilder': ...
    def userEmail(self, string: str) -> 'TestTokenBuilder': ...
    def userFullName(self, string: str) -> 'TestTokenBuilder': ...
    def username(self, string: str) -> 'TestTokenBuilder': ...
