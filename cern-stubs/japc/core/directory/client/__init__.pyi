import cern.cmw.directory.client
import cern.japc.core
import cern.japc.core.factory
import cern.japc.core.spi.factory
import java.util
import typing


class CcdbServiceConfigLookup(cern.japc.core.spi.factory.ServiceConfigLookup):
    def __init__(self): ...
    def getConfig(self, string: str) -> typing.List[java.util.Properties]: ...

class CcdbServiceNameResolver(cern.japc.core.factory.ServiceNameResolver):
    SYSPROP_JAPC_CCDB_SERVICE_NAME_RESOLVER_DISABLED: typing.ClassVar[str] = ...
    def __init__(self): ...
    def getServiceName(self, string: str, parameterDescriptor: cern.japc.core.ParameterDescriptor) -> str: ...

class DirectoryLocator:
    def __init__(self): ...
    @staticmethod
    def get() -> cern.cmw.directory.client.DirectoryClient: ...

class ServiceBinder:
    def __init__(self): ...
    @staticmethod
    def bind(properties: java.util.Properties) -> None: ...
    @staticmethod
    def main(stringArray: typing.List[str]) -> None: ...
    @staticmethod
    def update(serverInfo: cern.cmw.directory.client.ServerInfo) -> None: ...
