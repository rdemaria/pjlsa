import cern.accsoft.commons.domain
import cern.accsoft.commons.domain.zones
import cern.accsoft.commons.util
import java.util
import typing


class ParticleTransfer(cern.accsoft.commons.util.Named):
    def getAccelerator(self) -> cern.accsoft.commons.domain.Accelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> 'ParticleTransferType': ...

class ParticleTransferType(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['ParticleTransferType']):
    RING: typing.ClassVar['ParticleTransferType'] = ...
    TRANSFER: typing.ClassVar['ParticleTransferType'] = ...
    SOURCE: typing.ClassVar['ParticleTransferType'] = ...
    EXPERIMENT: typing.ClassVar['ParticleTransferType'] = ...
    COOLER: typing.ClassVar['ParticleTransferType'] = ...
    @staticmethod
    def valueOf(string: str) -> 'ParticleTransferType': ...
    @staticmethod
    def values() -> typing.List['ParticleTransferType']: ...

class AdParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['AdParticleTransfer'], ParticleTransfer):
    ADRING: typing.ClassVar['AdParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'AdParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['AdParticleTransfer']: ...

class AwakeParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['AwakeParticleTransfer'], ParticleTransfer):
    AWAKE: typing.ClassVar['AwakeParticleTransfer'] = ...
    AWAKEElectronTransfer: typing.ClassVar['AwakeParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'AwakeParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['AwakeParticleTransfer']: ...

class CtfParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['CtfParticleTransfer'], ParticleTransfer):
    CTF: typing.ClassVar['CtfParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'CtfParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['CtfParticleTransfer']: ...

class ElenaParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['ElenaParticleTransfer'], ParticleTransfer):
    ELENA: typing.ClassVar['ElenaParticleTransfer'] = ...
    ElenaLNE00Extraction: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE01Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE02Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE03Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE04Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE05Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE06Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE07Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE50Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    LNE51Transfer: typing.ClassVar['ElenaParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'ElenaParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['ElenaParticleTransfer']: ...

class IsoldeParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['IsoldeParticleTransfer'], ParticleTransfer):
    ISOLDE: typing.ClassVar['IsoldeParticleTransfer'] = ...
    HIE: typing.ClassVar['IsoldeParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'IsoldeParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['IsoldeParticleTransfer']: ...

class LeirParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['LeirParticleTransfer'], ParticleTransfer):
    LEIRRING: typing.ClassVar['LeirParticleTransfer'] = ...
    LINAC3: typing.ClassVar['LeirParticleTransfer'] = ...
    LEIRInjection: typing.ClassVar['LeirParticleTransfer'] = ...
    LEIREjection: typing.ClassVar['LeirParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'LeirParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['LeirParticleTransfer']: ...

class LhcParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['LhcParticleTransfer'], ParticleTransfer):
    LHCRING: typing.ClassVar['LhcParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'LhcParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['LhcParticleTransfer']: ...

class NorthParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['NorthParticleTransfer'], ParticleTransfer):
    H2: typing.ClassVar['NorthParticleTransfer'] = ...
    H4: typing.ClassVar['NorthParticleTransfer'] = ...
    H6: typing.ClassVar['NorthParticleTransfer'] = ...
    H8: typing.ClassVar['NorthParticleTransfer'] = ...
    K12: typing.ClassVar['NorthParticleTransfer'] = ...
    M2: typing.ClassVar['NorthParticleTransfer'] = ...
    T2: typing.ClassVar['NorthParticleTransfer'] = ...
    T4: typing.ClassVar['NorthParticleTransfer'] = ...
    T6: typing.ClassVar['NorthParticleTransfer'] = ...
    T10: typing.ClassVar['NorthParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'NorthParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['NorthParticleTransfer']: ...

class PsParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['PsParticleTransfer'], ParticleTransfer):
    PSRING: typing.ClassVar['PsParticleTransfer'] = ...
    PSExtractionTT2: typing.ClassVar['PsParticleTransfer'] = ...
    T08Transfer: typing.ClassVar['PsParticleTransfer'] = ...
    T09Transfer: typing.ClassVar['PsParticleTransfer'] = ...
    T11Transfer: typing.ClassVar['PsParticleTransfer'] = ...
    PSExtractionEast: typing.ClassVar['PsParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'PsParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['PsParticleTransfer']: ...

class PsbParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['PsbParticleTransfer'], ParticleTransfer):
    LINAC4: typing.ClassVar['PsbParticleTransfer'] = ...
    PSBInjection: typing.ClassVar['PsbParticleTransfer'] = ...
    PSBRING: typing.ClassVar['PsbParticleTransfer'] = ...
    PSBExtraction: typing.ClassVar['PsbParticleTransfer'] = ...
    PSTransfer: typing.ClassVar['PsbParticleTransfer'] = ...
    GPSTransfer: typing.ClassVar['PsbParticleTransfer'] = ...
    HRSTransfer: typing.ClassVar['PsbParticleTransfer'] = ...
    PSBDumpTransfer: typing.ClassVar['PsbParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'PsbParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['PsbParticleTransfer']: ...

class SpsParticleTransfer(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['SpsParticleTransfer'], ParticleTransfer):
    AWAKETransfer: typing.ClassVar['SpsParticleTransfer'] = ...
    EastExtraction: typing.ClassVar['SpsParticleTransfer'] = ...
    HiRadMatTransfer: typing.ClassVar['SpsParticleTransfer'] = ...
    LHCB1Transfer: typing.ClassVar['SpsParticleTransfer'] = ...
    LHCB2Transfer: typing.ClassVar['SpsParticleTransfer'] = ...
    NorthExtraction: typing.ClassVar['SpsParticleTransfer'] = ...
    SPSInjection: typing.ClassVar['SpsParticleTransfer'] = ...
    SPSRING: typing.ClassVar['SpsParticleTransfer'] = ...
    T2Transfer: typing.ClassVar['SpsParticleTransfer'] = ...
    T4Transfer: typing.ClassVar['SpsParticleTransfer'] = ...
    T6Transfer: typing.ClassVar['SpsParticleTransfer'] = ...
    WestExtraction: typing.ClassVar['SpsParticleTransfer'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getAcceleratorZones(self) -> java.util.List[cern.accsoft.commons.domain.zones.AcceleratorZone]: ...
    def getDescription(self) -> str: ...
    def getParticleTransferType(self) -> ParticleTransferType: ...
    @staticmethod
    def valueOf(string: str) -> 'SpsParticleTransfer': ...
    @staticmethod
    def values() -> typing.List['SpsParticleTransfer']: ...
