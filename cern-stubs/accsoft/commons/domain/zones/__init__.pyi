import cern.accsoft.commons.domain
import cern.accsoft.commons.domain.particletransfers
import cern.accsoft.commons.util
import java.util
import typing


class AcceleratorZone(cern.accsoft.commons.util.Named):
    def getAccelerator(self) -> cern.accsoft.commons.domain.Accelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...

class AdAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['AdAcceleratorZone'], AcceleratorZone):
    AD: typing.ClassVar['AdAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'AdAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['AdAcceleratorZone']: ...

class AwakeAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['AwakeAcceleratorZone'], AcceleratorZone):
    AWAKE: typing.ClassVar['AwakeAcceleratorZone'] = ...
    TT43: typing.ClassVar['AwakeAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'AwakeAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['AwakeAcceleratorZone']: ...

class CtfAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['CtfAcceleratorZone'], AcceleratorZone):
    CTF: typing.ClassVar['CtfAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'CtfAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['CtfAcceleratorZone']: ...

class ElenaAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['ElenaAcceleratorZone'], AcceleratorZone):
    ELENA: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE00: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01A: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01B: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01C: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE03A: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01D: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE02: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE03B: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE04: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE06A: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE05: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE06B: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE07: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE50: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE51: typing.ClassVar['ElenaAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'ElenaAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['ElenaAcceleratorZone']: ...

class IsoldeAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['IsoldeAcceleratorZone'], AcceleratorZone):
    ISOLDE: typing.ClassVar['IsoldeAcceleratorZone'] = ...
    HIE: typing.ClassVar['IsoldeAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'IsoldeAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['IsoldeAcceleratorZone']: ...

class LeirAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['LeirAcceleratorZone'], AcceleratorZone):
    LEIR: typing.ClassVar['LeirAcceleratorZone'] = ...
    LINAC3: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETL: typing.ClassVar['LeirAcceleratorZone'] = ...
    ITE: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETP: typing.ClassVar['LeirAcceleratorZone'] = ...
    ITH: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETL_INJ: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETL_EJ: typing.ClassVar['LeirAcceleratorZone'] = ...
    EI: typing.ClassVar['LeirAcceleratorZone'] = ...
    EE: typing.ClassVar['LeirAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'LeirAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['LeirAcceleratorZone']: ...

class LhcAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['LhcAcceleratorZone'], AcceleratorZone):
    LHC: typing.ClassVar['LhcAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'LhcAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['LhcAcceleratorZone']: ...

class NorthAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['NorthAcceleratorZone'], AcceleratorZone):
    H2Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H2A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H2B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4C: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6C: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8C: typing.ClassVar['NorthAcceleratorZone'] = ...
    K12A: typing.ClassVar['NorthAcceleratorZone'] = ...
    M2A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T2A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T4A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T6A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T10A: typing.ClassVar['NorthAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.Accelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'NorthAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['NorthAcceleratorZone']: ...

class PsAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['PsAcceleratorZone'], AcceleratorZone):
    PS: typing.ClassVar['PsAcceleratorZone'] = ...
    F16: typing.ClassVar['PsAcceleratorZone'] = ...
    F61: typing.ClassVar['PsAcceleratorZone'] = ...
    T08: typing.ClassVar['PsAcceleratorZone'] = ...
    F62_1: typing.ClassVar['PsAcceleratorZone'] = ...
    F62_2: typing.ClassVar['PsAcceleratorZone'] = ...
    F63: typing.ClassVar['PsAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'PsAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['PsAcceleratorZone']: ...

class PsbAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['PsbAcceleratorZone'], AcceleratorZone):
    LINAC4: typing.ClassVar['PsbAcceleratorZone'] = ...
    L4T: typing.ClassVar['PsbAcceleratorZone'] = ...
    LT: typing.ClassVar['PsbAcceleratorZone'] = ...
    LTB: typing.ClassVar['PsbAcceleratorZone'] = ...
    LBE: typing.ClassVar['PsbAcceleratorZone'] = ...
    BI: typing.ClassVar['PsbAcceleratorZone'] = ...
    PSB: typing.ClassVar['PsbAcceleratorZone'] = ...
    BE_BT: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTP: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTM: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTY: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTM_BTY: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTY_GPS: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTY_HRS: typing.ClassVar['PsbAcceleratorZone'] = ...
    BT_DUMP: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTM_DUMP: typing.ClassVar['PsbAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'PsbAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['PsbAcceleratorZone']: ...

class SpsAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['SpsAcceleratorZone'], AcceleratorZone):
    SPS: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT40: typing.ClassVar['SpsAcceleratorZone'] = ...
    TI8: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT41: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT10: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT21: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT22: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT23: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT24: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT25: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT60: typing.ClassVar['SpsAcceleratorZone'] = ...
    TI2: typing.ClassVar['SpsAcceleratorZone'] = ...
    NORTH_EXTRACTION: typing.ClassVar['SpsAcceleratorZone'] = ...
    WEST_EXTRACTION: typing.ClassVar['SpsAcceleratorZone'] = ...
    EAST_EXTRACTION: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT2: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT66: typing.ClassVar['SpsAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'SpsAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['SpsAcceleratorZone']: ...
