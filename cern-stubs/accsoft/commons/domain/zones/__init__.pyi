import cern.accsoft.commons.domain
import cern.accsoft.commons.domain.particletransfers
import cern.accsoft.commons.util
import java.util
import typing



class AcceleratorZone(cern.accsoft.commons.util.Named):
    """
    Java class 'cern.accsoft.commons.domain.zones.AcceleratorZone'
    
        Interfaces:
            cern.accsoft.commons.util.Named
    
    """
    def getAccelerator(self) -> cern.accsoft.commons.domain.Accelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...

class AdAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['AdAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.AdAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        AD (cern.accsoft.commons.domain.zones.AdAcceleratorZone): final static field
    
    """
    AD: typing.ClassVar['AdAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'AdAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['AdAcceleratorZone']: ...

class AwakeAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['AwakeAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.AwakeAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        AWAKE (cern.accsoft.commons.domain.zones.AwakeAcceleratorZone): final static field
        TT43 (cern.accsoft.commons.domain.zones.AwakeAcceleratorZone): final static field
    
    """
    AWAKE: typing.ClassVar['AwakeAcceleratorZone'] = ...
    TT43: typing.ClassVar['AwakeAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'AwakeAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['AwakeAcceleratorZone']: ...

class CtfAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['CtfAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.CtfAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        CTF (cern.accsoft.commons.domain.zones.CtfAcceleratorZone): final static field
    
    """
    CTF: typing.ClassVar['CtfAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'CtfAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['CtfAcceleratorZone']: ...

class ElenaAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['ElenaAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.ElenaAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        ELENA (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE00 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE01A (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE01B (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE01C (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE03A (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE01D (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE02 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE03B (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE04 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE06A (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE05 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE06B (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE07 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE50 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
        LNE51 (cern.accsoft.commons.domain.zones.ElenaAcceleratorZone): final static field
    
    """
    ELENA: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE00: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01A: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01B: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01C: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE03A: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE01D: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE02: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE03B: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE04: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE06A: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE05: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE06B: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE07: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE50: typing.ClassVar['ElenaAcceleratorZone'] = ...
    LNE51: typing.ClassVar['ElenaAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'ElenaAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['ElenaAcceleratorZone']: ...

class IsoldeAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['IsoldeAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.IsoldeAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        ISOLDE (cern.accsoft.commons.domain.zones.IsoldeAcceleratorZone): final static field
        HIE (cern.accsoft.commons.domain.zones.IsoldeAcceleratorZone): final static field
    
    """
    ISOLDE: typing.ClassVar['IsoldeAcceleratorZone'] = ...
    HIE: typing.ClassVar['IsoldeAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'IsoldeAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['IsoldeAcceleratorZone']: ...

class LeirAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['LeirAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.LeirAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        LEIR (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        LINAC3 (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        ETL (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        ITE (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        ETP (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        ITH (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        ETL_INJ (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        ETL_EJ (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        EI (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
        EE (cern.accsoft.commons.domain.zones.LeirAcceleratorZone): final static field
    
    """
    LEIR: typing.ClassVar['LeirAcceleratorZone'] = ...
    LINAC3: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETL: typing.ClassVar['LeirAcceleratorZone'] = ...
    ITE: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETP: typing.ClassVar['LeirAcceleratorZone'] = ...
    ITH: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETL_INJ: typing.ClassVar['LeirAcceleratorZone'] = ...
    ETL_EJ: typing.ClassVar['LeirAcceleratorZone'] = ...
    EI: typing.ClassVar['LeirAcceleratorZone'] = ...
    EE: typing.ClassVar['LeirAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'LeirAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['LeirAcceleratorZone']: ...

class LhcAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['LhcAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.LhcAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        LHC (cern.accsoft.commons.domain.zones.LhcAcceleratorZone): final static field
    
    """
    LHC: typing.ClassVar['LhcAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'LhcAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['LhcAcceleratorZone']: ...

class NorthAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['NorthAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.NorthAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        H2Z (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H2A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H2B (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H4Z (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H4A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H4B (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H4C (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H6Z (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H6A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H6B (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H6C (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H8Z (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H8A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H8B (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        H8C (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        K12A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        M2A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        T2A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        T4A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        T6A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
        T10A (cern.accsoft.commons.domain.zones.NorthAcceleratorZone): final static field
    
    """
    H2Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H2A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H2B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H4C: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H6C: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8Z: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8A: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8B: typing.ClassVar['NorthAcceleratorZone'] = ...
    H8C: typing.ClassVar['NorthAcceleratorZone'] = ...
    K12A: typing.ClassVar['NorthAcceleratorZone'] = ...
    M2A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T2A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T4A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T6A: typing.ClassVar['NorthAcceleratorZone'] = ...
    T10A: typing.ClassVar['NorthAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.Accelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'NorthAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['NorthAcceleratorZone']: ...

class PsAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['PsAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.PsAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        PS (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
        F16 (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
        F61 (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
        T08 (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
        F62_1 (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
        F62_2 (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
        F63 (cern.accsoft.commons.domain.zones.PsAcceleratorZone): final static field
    
    """
    PS: typing.ClassVar['PsAcceleratorZone'] = ...
    F16: typing.ClassVar['PsAcceleratorZone'] = ...
    F61: typing.ClassVar['PsAcceleratorZone'] = ...
    T08: typing.ClassVar['PsAcceleratorZone'] = ...
    F62_1: typing.ClassVar['PsAcceleratorZone'] = ...
    F62_2: typing.ClassVar['PsAcceleratorZone'] = ...
    F63: typing.ClassVar['PsAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'PsAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['PsAcceleratorZone']: ...

class PsbAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['PsbAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.PsbAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        LINAC4 (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        L4T (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        LT (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        LTB (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        LBE (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BI (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        PSB (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BE_BT (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTP (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTM (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTY (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTM_BTY (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTY_GPS (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTY_HRS (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BT_DUMP (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
        BTM_DUMP (cern.accsoft.commons.domain.zones.PsbAcceleratorZone): final static field
    
    """
    LINAC4: typing.ClassVar['PsbAcceleratorZone'] = ...
    L4T: typing.ClassVar['PsbAcceleratorZone'] = ...
    LT: typing.ClassVar['PsbAcceleratorZone'] = ...
    LTB: typing.ClassVar['PsbAcceleratorZone'] = ...
    LBE: typing.ClassVar['PsbAcceleratorZone'] = ...
    BI: typing.ClassVar['PsbAcceleratorZone'] = ...
    PSB: typing.ClassVar['PsbAcceleratorZone'] = ...
    BE_BT: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTP: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTM: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTY: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTM_BTY: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTY_GPS: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTY_HRS: typing.ClassVar['PsbAcceleratorZone'] = ...
    BT_DUMP: typing.ClassVar['PsbAcceleratorZone'] = ...
    BTM_DUMP: typing.ClassVar['PsbAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'PsbAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['PsbAcceleratorZone']: ...

class SpsAcceleratorZone(cern.accsoft.commons.util.AbstractImmutableNamedSerializable['SpsAcceleratorZone'], AcceleratorZone):
    """
    Java class 'cern.accsoft.commons.domain.zones.SpsAcceleratorZone'
    
        Extends:
            cern.accsoft.commons.util.AbstractImmutableNamedSerializable
    
        Interfaces:
            cern.accsoft.commons.domain.zones.AcceleratorZone
    
      Attributes:
        SPS (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT40 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TI8 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT41 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT10 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT21 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT22 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT23 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT24 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT25 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT60 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TI2 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        NORTH_EXTRACTION (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        WEST_EXTRACTION (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        EAST_EXTRACTION (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT2 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
        TT66 (cern.accsoft.commons.domain.zones.SpsAcceleratorZone): final static field
    
    """
    SPS: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT40: typing.ClassVar['SpsAcceleratorZone'] = ...
    TI8: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT41: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT10: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT21: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT22: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT23: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT24: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT25: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT60: typing.ClassVar['SpsAcceleratorZone'] = ...
    TI2: typing.ClassVar['SpsAcceleratorZone'] = ...
    NORTH_EXTRACTION: typing.ClassVar['SpsAcceleratorZone'] = ...
    WEST_EXTRACTION: typing.ClassVar['SpsAcceleratorZone'] = ...
    EAST_EXTRACTION: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT2: typing.ClassVar['SpsAcceleratorZone'] = ...
    TT66: typing.ClassVar['SpsAcceleratorZone'] = ...
    def getAccelerator(self) -> cern.accsoft.commons.domain.CernAccelerator: ...
    def getParticleTransfers(self) -> java.util.Set[cern.accsoft.commons.domain.particletransfers.ParticleTransfer]: ...
    @staticmethod
    def valueOf(string: str) -> 'SpsAcceleratorZone': ...
    @staticmethod
    def values() -> typing.List['SpsAcceleratorZone']: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("cern.accsoft.commons.domain.zones")``.

    AcceleratorZone: typing.Type[AcceleratorZone]
    AdAcceleratorZone: typing.Type[AdAcceleratorZone]
    AwakeAcceleratorZone: typing.Type[AwakeAcceleratorZone]
    CtfAcceleratorZone: typing.Type[CtfAcceleratorZone]
    ElenaAcceleratorZone: typing.Type[ElenaAcceleratorZone]
    IsoldeAcceleratorZone: typing.Type[IsoldeAcceleratorZone]
    LeirAcceleratorZone: typing.Type[LeirAcceleratorZone]
    LhcAcceleratorZone: typing.Type[LhcAcceleratorZone]
    NorthAcceleratorZone: typing.Type[NorthAcceleratorZone]
    PsAcceleratorZone: typing.Type[PsAcceleratorZone]
    PsbAcceleratorZone: typing.Type[PsbAcceleratorZone]
    SpsAcceleratorZone: typing.Type[SpsAcceleratorZone]
