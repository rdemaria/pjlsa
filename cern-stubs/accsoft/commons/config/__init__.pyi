from typing import Any as _py_Any
import cern.accsoft.commons.config.coders
import java.util


class Config:
    def getParam(self, string: str) -> _py_Any: ...
    def isSupported(self, string: str) -> bool: ...

class SupportedConfig:
    def getSupportedParams(self) -> java.util.List['SupportedParam']: ...

class SupportedParam:
    def getDefaultValue(self) -> str: ...
    def getEndUserHelpMessage(self) -> str: ...
    def getName(self) -> str: ...
    def getParser(self) -> cern.accsoft.commons.config.coders.CoderTxt[_py_Any]: ...
    def isRequired(self) -> bool: ...

class UserConfigProvider:
    def getParams(self) -> java.util.Properties: ...

class AbstractConfig(Config):
    def getParam(self, string: str) -> _py_Any: ...
    def isSupported(self, string: str) -> bool: ...

class DefaultUserConfigProvider(UserConfigProvider):
    def __init__(self, string: str, boolean: bool): ...
    def getParams(self) -> java.util.Properties: ...
