import cern.accsoft.commons.value.operation
import cern.accsoft.commons.value.operation.factory
import typing


class BinaryOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.BinaryOperation]):
    MAX: typing.ClassVar[str] = ...
    MIN: typing.ClassVar[str] = ...
    IEEEREMAINDER: typing.ClassVar[str] = ...
    POW: typing.ClassVar[str] = ...
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...

class CoreOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.BinaryOperation]):
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...

class MathFunctionOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.MathFunctionOperation]):
    ABS: typing.ClassVar[str] = ...
    ACOS: typing.ClassVar[str] = ...
    ASIN: typing.ClassVar[str] = ...
    ATAN: typing.ClassVar[str] = ...
    CEIL: typing.ClassVar[str] = ...
    COS: typing.ClassVar[str] = ...
    EXP: typing.ClassVar[str] = ...
    FLOOR: typing.ClassVar[str] = ...
    LOG: typing.ClassVar[str] = ...
    LOG10: typing.ClassVar[str] = ...
    POW2: typing.ClassVar[str] = ...
    RINT: typing.ClassVar[str] = ...
    ROUND: typing.ClassVar[str] = ...
    SIN: typing.ClassVar[str] = ...
    SQRT: typing.ClassVar[str] = ...
    TAN: typing.ClassVar[str] = ...
    TODEGREES: typing.ClassVar[str] = ...
    TORADIANS: typing.ClassVar[str] = ...
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...

class UnaryOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.UnaryOperation]):
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...
