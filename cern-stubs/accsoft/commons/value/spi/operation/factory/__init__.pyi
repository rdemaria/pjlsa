from typing import ClassVar as _py_ClassVar
import cern.accsoft.commons.value.operation
import cern.accsoft.commons.value.operation.factory


class BinaryOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.BinaryOperation]):
    MAX: _py_ClassVar[str] = ...
    MIN: _py_ClassVar[str] = ...
    IEEEREMAINDER: _py_ClassVar[str] = ...
    POW: _py_ClassVar[str] = ...
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...

class CoreOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.BinaryOperation]):
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...

class MathFunctionOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.MathFunctionOperation]):
    ABS: _py_ClassVar[str] = ...
    ACOS: _py_ClassVar[str] = ...
    ASIN: _py_ClassVar[str] = ...
    ATAN: _py_ClassVar[str] = ...
    CEIL: _py_ClassVar[str] = ...
    COS: _py_ClassVar[str] = ...
    EXP: _py_ClassVar[str] = ...
    FLOOR: _py_ClassVar[str] = ...
    LOG: _py_ClassVar[str] = ...
    LOG10: _py_ClassVar[str] = ...
    POW2: _py_ClassVar[str] = ...
    RINT: _py_ClassVar[str] = ...
    ROUND: _py_ClassVar[str] = ...
    SIN: _py_ClassVar[str] = ...
    SQRT: _py_ClassVar[str] = ...
    TAN: _py_ClassVar[str] = ...
    TODEGREES: _py_ClassVar[str] = ...
    TORADIANS: _py_ClassVar[str] = ...
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...

class UnaryOperationProvider(cern.accsoft.commons.value.operation.factory.AbstractOperationProvider[cern.accsoft.commons.value.operation.UnaryOperation]):
    def __init__(self): ...
    def getType(self) -> cern.accsoft.commons.value.operation.OperationType: ...
