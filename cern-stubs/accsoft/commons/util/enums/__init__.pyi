import java.lang
import typing


class EnumInca(java.lang.Enum['EnumInca']):
    DIR: typing.ClassVar['EnumInca'] = ...
    CTX: typing.ClassVar['EnumInca'] = ...
    CODEC: typing.ClassVar['EnumInca'] = ...
    GUI: typing.ClassVar['EnumInca'] = ...
    _valueOf_1__T = typing.TypeVar('_valueOf_1__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'EnumInca': ...
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_1__T], string: str) -> _valueOf_1__T: ...
    @staticmethod
    def values() -> typing.List['EnumInca']: ...

class EnumUtility:
    @staticmethod
    def checkPropertyValue(string: str, enum: java.lang.Enum[typing.Any]) -> bool: ...

class EnumWildcard(java.lang.Enum['EnumWildcard']):
    ALL: typing.ClassVar['EnumWildcard'] = ...
    _valueOf_1__T = typing.TypeVar('_valueOf_1__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'EnumWildcard': ...
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_1__T], string: str) -> _valueOf_1__T: ...
    @staticmethod
    def values() -> typing.List['EnumWildcard']: ...
