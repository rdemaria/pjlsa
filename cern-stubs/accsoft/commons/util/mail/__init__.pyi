from typing import List as _py_List
from typing import overload
import java.io


class MailSender:
    @overload
    def send(self, stringArray: _py_List[str], string2: str, string3: str) -> None: ...
    @overload
    def send(self, stringArray: _py_List[str], stringArray2: _py_List[str], stringArray3: _py_List[str], string4: str, string5: str) -> None: ...
    @overload
    def send(self, stringArray: _py_List[str], stringArray2: _py_List[str], stringArray3: _py_List[str], string4: str, string5: str, fileArray: _py_List[java.io.File]) -> None: ...

class MailSenderFactory:
    def __init__(self): ...
    def getFrom(self) -> str: ...
    def getSmtpHost(self) -> str: ...
    def getSmtpPort(self) -> int: ...
    def getUserName(self) -> str: ...
    def isTLSConnection(self) -> bool: ...
    @classmethod
    def newInstance(cls) -> 'MailSenderFactory': ...
    @overload
    def newMailSender(self) -> MailSender: ...
    @overload
    def newMailSender(self, string: str) -> MailSender: ...
    def setFrom(self, string: str) -> None: ...
    def setPassword(self, string: str) -> None: ...
    def setSmtpHost(self, string: str) -> None: ...
    def setSmtpPort(self, int: int) -> None: ...
    def setTLSConnection(self, boolean: bool) -> None: ...
    def setUserName(self, string: str) -> None: ...
