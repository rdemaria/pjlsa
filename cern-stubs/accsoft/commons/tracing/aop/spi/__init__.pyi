import cern.accsoft.commons.tracing.aop
import cern.accsoft.commons.tracing.requests


class TracingDetailsKeyValuePairWriterMBean:
    def getEnabled(self) -> bool: ...
    def getLogOnlyErrors(self) -> bool: ...
    def setEnabled(self, boolean: bool) -> None: ...
    def setLogOnlyErrors(self, boolean: bool) -> None: ...

class TracingDetailsWriterMBean:
    def getEnabled(self) -> bool: ...
    def getLogOnlyErrors(self) -> bool: ...
    def setEnabled(self, boolean: bool) -> None: ...
    def setLogOnlyErrors(self, boolean: bool) -> None: ...

class TracingIncomingRequestsWriterMBean:
    def getLogOnlyErrors(self) -> bool: ...
    def getRunning(self) -> bool: ...
    def setLogOnlyErrors(self, boolean: bool) -> None: ...
    def setRunning(self, boolean: bool) -> None: ...

class TracingStatisticsWriterMBean:
    def getFilePath(self) -> str: ...
    def getLastFileStatsWritten(self) -> str: ...
    def getStatisticsCount(self) -> int: ...
    def getStatsWriting(self) -> bool: ...
    def getStatus(self) -> str: ...
    def setStatsWriting(self, boolean: bool) -> None: ...

class TracingDetailsKeyValuePairWriter(cern.accsoft.commons.tracing.aop.TracingAspect, TracingDetailsKeyValuePairWriterMBean):
    def __init__(self): ...
    def after(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def before(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def getEnabled(self) -> bool: ...
    def getLogOnlyErrors(self) -> bool: ...
    def setEnabled(self, boolean: bool) -> None: ...
    def setLogOnlyErrors(self, boolean: bool) -> None: ...

class TracingDetailsWriter(cern.accsoft.commons.tracing.aop.TracingAspect, TracingDetailsWriterMBean):
    def __init__(self): ...
    def after(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def before(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def getEnabled(self) -> bool: ...
    def getLogOnlyErrors(self) -> bool: ...
    def setEnabled(self, boolean: bool) -> None: ...
    def setLogOnlyErrors(self, boolean: bool) -> None: ...

class TracingIncomingRequestsWriter(cern.accsoft.commons.tracing.aop.TracingAspect, TracingIncomingRequestsWriterMBean):
    def __init__(self): ...
    def after(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def before(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def getLogOnlyErrors(self) -> bool: ...
    def getRunning(self) -> bool: ...
    def setLogOnlyErrors(self, boolean: bool) -> None: ...
    def setRunning(self, boolean: bool) -> None: ...

class TracingStatisticsWriter(TracingStatisticsWriterMBean, cern.accsoft.commons.tracing.aop.TracingAspect):
    def __init__(self): ...
    def after(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def before(self, clientRequestInfo: cern.accsoft.commons.tracing.requests.ClientRequestInfo) -> None: ...
    def getFilePath(self) -> str: ...
    def getLastFileStatsWritten(self) -> str: ...
    def getStatisticsCount(self) -> int: ...
    def getStatsWriting(self) -> bool: ...
    def getStatus(self) -> str: ...
    def setFilePath(self, string: str) -> None: ...
    def setStatsWriting(self, boolean: bool) -> None: ...
